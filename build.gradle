/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'tzwickl' at '3/1/16 10:49 PM' with Gradle 2.9
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

apply from: 'gradle/swt.gradle'

version = '1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = "smt_visualizer.app.SMTVisualizer"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven {
        url "https://swt-repo.googlecode.com/svn/repo/"
    }
}

ext {
	slf4j_version = "1.7.13"
	slf4j_simple_version = "1.7.18"
	commons_cli_version = "1.3.1"
	datastax_version = "3.0.0"
	
	// test
	junit_version = "4.12"
	
	// UI dependencies
	swt_version = "3.3.0-v3346"
	swt_os_version = '4.3'
  	swt_artifact_name = "org.eclipse.swt.${swtWindowingLibrary}.${swtPlatform}.${swtArch}"
  	freechart_version = "1.0.13"
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile "org.slf4j:slf4j-api:${slf4j_version}"
    compile "org.slf4j:slf4j-simple:${slf4j_simple_version}"
    
    compile "commons-cli:commons-cli:${commons_cli_version}"
    
    compile "com.datastax.cassandra:cassandra-driver-core:${datastax_version}"
    
    compile "org.eclipse:swt:${swt_version}"
    compile "org.eclipse.swt:${swt_artifact_name}:${swt_os_version}"
    compile "jfree:jfreechart:${freechart_version}"
    
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:${junit_version}"
}

// tasks

task myRun(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  main = mainClassName
  args "-h"
  if (swtPlatform == 'macosx') {
    jvmArgs "-XstartOnFirstThread"
  }
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',  
        	'Implementation-Version': version,
        	'Main-Class': mainClassName
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
